
// Source Data Landsat Surface Reflectance
var NDVI32day = ee.ImageCollection('LANDSAT/LT05/C01/T1_SR');

// Bounding Polygon for the project
var polygon = ee.Geometry.Polygon(
        [[-113.01562,64.06060],
[-108.97052,64.06060],
[-108.97052,65.52829],
[-113.01562,65.52829],
[-113.01562,64.06060]], null, false);



// Polygon for QA chart to check values
var chartpolygon = ee.Geometry.Polygon(
        [[-110.62106519920656,64.8658026230566],
[-109.8327961562378,64.8658026230566],
[-109.8327961562378,65.07844129925964],
[-110.62106519920656,65.07844129925964],
[-110.62106519920656,64.8658026230566]], null, false);

// -------------------------------------------
// DEFINE KEY FUNCTIONS
// -------------------------------------------

// Function to add NDVI as a unique band to the image collection
var addNDVI = function(image) {
  // NDVI (Landsat 8 OLI) : NIR=B5, Red=B4
  // NDVI (Landsat 5 TM) : NIR=B4, Red=B3
  // NDVI = (NIR-RED)/(NIR+RED)
  //var ndvi = image.normalizedDifference(['B5', 'B4']).rename('NDVI'); // landsat8
  var ndvi = image.normalizedDifference(['B4', 'B3']).rename('NDVI'); // landsat5
  return image.addBands(ndvi);
};


// Define a function to mask out image clouds and shadows.
var cloudMask = function(img) {
  var qa = img.select('pixel_qa');
  var cloud = qa.bitwiseAnd(1 << 5).or(qa.bitwiseAnd(1 << 3));
  return img.updateMask(cloud.not());
};


// -------------------------------------------
// GET DATA FOR TARGET PERIODS
// -------------------------------------------
// Want to acount for interannual variability
// sample 5 year batches e.g., 1984 to 1990
// Filer for June to August months
// Filter out clouded pixels
// Run function to add NDVI band to collection
// Filter out all bands except for NDVI - convert collection to image
// Apply median or max function

// Filter for target period
var target_period = NDVI32day.filter(ee.Filter.calendarRange(1985,1990,'year'))
.filter(ee.Filter.calendarRange(6,7,'month'));
// Apply cloud filter
var aftercloudfilter = target_period.map(cloudMask);
// Calculate NDVI
var withNDVI = aftercloudfilter.map(addNDVI);
// Filter out non-target bands
var withNDVI = withNDVI.select(['NDVI']);
// Calculate the median of NDVI across images in period
var median_85_90 = withNDVI.median();


// Repeate for 1990 to 1995
var target_period = NDVI32day.filter(ee.Filter.calendarRange(1990,1995,'year'))
.filter(ee.Filter.calendarRange(6,7,'month'));
var aftercloudfilter = target_period.map(cloudMask);
var withNDVI = aftercloudfilter.map(addNDVI);
var withNDVI = withNDVI.select(['NDVI']);
var median_90_95 = withNDVI.median();



// Repeate for 1995 to 2000
var target_period = NDVI32day.filter(ee.Filter.calendarRange(1995,2000,'year'))
.filter(ee.Filter.calendarRange(6,7,'month'));
var aftercloudfilter = target_period.map(cloudMask);
var withNDVI = aftercloudfilter.map(addNDVI);
var withNDVI = withNDVI.select(['NDVI']);
var median_95_00 = withNDVI.median();

// Repeate for 2000 to 2005
var target_period = NDVI32day.filter(ee.Filter.calendarRange(2000,2005,'year'))
.filter(ee.Filter.calendarRange(6,7,'month'));
var aftercloudfilter = target_period.map(cloudMask);
var withNDVI = aftercloudfilter.map(addNDVI);
var withNDVI = withNDVI.select(['NDVI']);
var median_00_05 = withNDVI.median();

// Repeate for 2005 to 2010
var target_period = NDVI32day.filter(ee.Filter.calendarRange(2005,2010,'year'))
.filter(ee.Filter.calendarRange(6,7,'month'));
var aftercloudfilter = target_period.map(cloudMask);
var withNDVI = aftercloudfilter.map(addNDVI);
var withNDVI = withNDVI.select(['NDVI']);
var median_05_10 = withNDVI.median();


// -------------------------------------------
// CREATE MAPS
// -------------------------------------------
// generate visual pallet


//the min-max range is based on looking the results of each resulting map layer; done go beyond these limits
var vizParams = { min:0.0,max:0.65,palette: ['white', 'yellow','green','purple']};

Map.setCenter(-110.72970316657575,64.53195231787222, 10);
Map.addLayer(median_85_90.clip(polygon),vizParams,'1985 to 1990');
Map.addLayer(median_90_95.clip(polygon),vizParams,'1990 to 1995');
Map.addLayer(median_95_00.clip(polygon),vizParams,'1995 to 2000');
Map.addLayer(median_00_05.clip(polygon),vizParams,'2000 to 2005');
Map.addLayer(median_05_10.clip(polygon),vizParams,'2005 to 2010');



// Calcualte QA values in test region
// Reduce the region. The region parameter is the Feature geometry.
var meanDictionary = median_85_90.reduceRegion({
  reducer: ee.Reducer.mean(),
  geometry: chartpolygon,
  scale: 30,
  maxPixels: 1e9
});
print(meanDictionary);

var meanDictionary = median_90_95.reduceRegion({
  reducer: ee.Reducer.mean(),
  geometry: chartpolygon,
  scale: 30,
  maxPixels: 1e9
});
print(meanDictionary);


var meanDictionary = median_95_00.reduceRegion({
  reducer: ee.Reducer.mean(),
  geometry: chartpolygon,
  scale: 30,
  maxPixels: 1e9
});
print(meanDictionary);


var meanDictionary = median_00_05.reduceRegion({
  reducer: ee.Reducer.mean(),
  geometry: chartpolygon,
  scale: 30,
  maxPixels: 1e9
});
print(meanDictionary);


var meanDictionary = median_05_10.reduceRegion({
  reducer: ee.Reducer.mean(),
  geometry: chartpolygon,
  scale: 30,
  maxPixels: 1e9
});
print(meanDictionary);




// -------------------------------------------
// EXPORT TO GOOGLE DRIVE
// -------------------------------------------
// generate visual pallet

// Export the image, specifying scale and region.
Export.image.toDrive({
  image: median_85_90,
  description: 'median_85_90',
  scale: 30,
  region: polygon
});

// Export the image, specifying scale and region.
Export.image.toDrive({
  image: median_90_95,
  description: 'median_90_95',
  scale: 30,
  region: polygon
});


// Export the image, specifying scale and region.
Export.image.toDrive({
  image: median_95_00,
  description: 'median_95_00',
  scale: 30,
  region: polygon
});

// Export the image, specifying scale and region.
Export.image.toDrive({
  image: median_00_05,
  description: 'median_00_05',
  scale: 30,
  region: polygon
});

// Export the image, specifying scale and region.
Export.image.toDrive({
  image: median_05_10,
  description: 'median_05_10',
  scale: 30,
  region: polygon
});


